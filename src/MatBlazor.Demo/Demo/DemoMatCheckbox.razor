@using MatBlazor.Components.MatCheckbox

<DocMatCheckbox></DocMatCheckbox>

<h5 class="mat-h5">Example</h5>

<DemoContainer>
    <Content>
        <div>
            <MatCheckbox bind-Checked="@Checked1" Label="@(getLabel(Checked1))"></MatCheckbox>
        </div>
        <div>
            <MatCheckbox bind-Checked="@Checked2" Label="@(getLabel(Checked2))"></MatCheckbox>
        </div>
        <div>
            <MatCheckbox Disabled="true" bind-Checked="@Checked1" Label="Disabled"></MatCheckbox>
        </div>
        <div>
            <MatCheckbox bind-Checked="@Checked2">Inline Label</MatCheckbox>
        </div>

        @functions
        {
            bool checked1 = true;
            bool checked2 = false;

            public bool Checked1
            {
                get { return checked1; }
                set
                {
                    checked1 = value;
                    StateHasChanged();
                }
            }

            public bool Checked2
            {
                get { return checked2; }
                set
                {
                    checked2 = value;
                    StateHasChanged();
                }
            }

            string getLabel(bool val)
            {
                return !val ? "Check me!" : "Uncheck me?";
            }

        }

    </Content>
    <SourceContent>
    	<BlazorFiddle Template="MatBlazor" Code=@(@"
        <div>
            <MatCheckbox bind-Checked=""@checked1"" Label=""@(getLabel(checked1))""></MatCheckbox>
        </div>
        <div>
            <MatCheckbox bind-Checked=""@checked2"" Label=""@(getLabel(checked2))""></MatCheckbox>
        </div>
        <div>
            <MatCheckbox Disabled=""true"" bind-Checked=""@checked1"" Label=""Disabled""></MatCheckbox>
        </div>
        <div>
            <MatCheckbox bind-Checked=""@checked2"">Inline Label</MatCheckbox>
        </div>

        @functions
        {
            private bool checked1 = true;
            private bool checked2 = false;

            string getLabel(bool val)
            {
                return !val ? ""Check me!"" : ""Uncheck me?"";
            }

        }

    ")></BlazorFiddle>
    </SourceContent>
</DemoContainer>