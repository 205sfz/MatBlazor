@namespace MatBlazor
@inherits BaseMatPaginator

@*
<div class="mdc-paginator">
    <div class="mdc-paginator-container">
        <div class="mdc-paginator-page-size">
            @Label
            <MatSelect @bind-Value="@PageSizeStr">
                @if (PageSizes != null)
                {
                    foreach (var item in PageSizes)
                    {
                        <MatOption Value="@item.Value.ToString()">@item.Text</MatOption>
                    }
                }
            </MatSelect>
        </div>

        <div class="mdc-paginator-range-actions">
            <span class="mdc-paginator-range-label">@PageLabel @CurrentPage / @TotalPages</span>
            <div class="mdc-paginator-range-buttons">
                <MatIconButton Icon="first_page" OnClick=@(async () => NavigateToPage(PageDirection.First)) Disabled=@(CurrentPage <= 1)></MatIconButton>
                <MatIconButton Icon="navigate_before" OnClick=@(async () => NavigateToPage(PageDirection.Previous)) Disabled=@(CurrentPage <= 1)></MatIconButton>               
                <MatIconButton Icon="navigate_next" OnClick="@(async () => NavigateToPage(PageDirection.Next))" Disabled="@(CurrentPage == EndPage)"></MatIconButton>
                <MatIconButton Icon="last_page" OnClick=@(async () => NavigateToPage(PageDirection.Last)) Disabled=@(CurrentPage == EndPage)></MatIconButton>
            </div>
        </div>
    </div>
</div>
*@